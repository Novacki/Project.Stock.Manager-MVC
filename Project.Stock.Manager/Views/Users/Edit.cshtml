@model Project.Stock.Manager.Application.Models.ViewModels.UserAccountDetailsViewModel

@{
    ViewData["Title"] = "Edit Account";
}

<h1>Edit User Account</h1>

<hr />
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input required asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">User</label>
                <input required asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
                <span class="text-danger">@ViewData["UserExist"]</span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" class="form-control">
                    <option class="form-control" value="0">Basic</option>
                    <option class="form-control" value="1">Admin</option>
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-outline-success" />
                <a class="btn btn-outline-info" asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>
    <div class="col-md-1"></div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
